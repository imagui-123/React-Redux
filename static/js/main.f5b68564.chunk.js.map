{"version":3,"sources":["components/PostForm.js","Post.js","components/EditComponent.js","components/AllPost.js","App.js","reducers/postReducer.js","index.js"],"names":["PostForm","handleSubmit","e","preventDefault","name","getName","value","description","getDescription","data","id","Date","editing","props","dispatch","type","getFieldDecorator","this","form","Title","Typography","level","labelCol","span","wrapperCol","onSubmit","Item","label","rules","message","ref","input","autoComplete","required","autosize","minRows","maxRows","offset","htmlType","Component","connect","Form","create","Post","post","onClick","EditComponent","handleEdit","newName","newDescription","className","defaultValue","AllPost","posts","map","key","state","App","theme","justify","postReducer","action","concat","filter","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5b68564.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { Form,  Button, Typography  } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\n\r\n\r\nclass PostForm extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const name = this.getName.value;\r\n    const description = this.getDescription.value;\r\n    const data = {\r\n      id: new Date(),\r\n      name,\r\n      description,\r\n      editing: false,\r\n    };\r\n  \r\n     this.props.dispatch({\r\n        type:'ADD_POST',\r\n        data\r\n    })\r\n        \r\n    this.getName.value=\"\";\r\n    this.getDescription.value =\"\";\r\n  };\r\n  render() {\r\n     const { getFieldDecorator } = this.props.form;\r\n     const { Title } = Typography;\r\n    return (\r\n      <div >\r\n        <Title level={2}> You are adding a new element</Title>\r\n        <Form labelCol={{span: 6}} wrapperCol={{span:6}} onSubmit={this.handleSubmit}>\r\n         \r\n         <Form.Item label=\"Name\">\r\n           {getFieldDecorator('name', {\r\n             rules: [{ message: 'Enter name!'}],\r\n           })(\r\n             <input  ref={input => (this.getName = input)} autoComplete=\"off\" required/>)}\r\n         </Form.Item>\r\n         \r\n         <Form.Item label=\"Description\">\r\n           {getFieldDecorator('description', {\r\n             rules: [{ message: 'Enter a description!'}],\r\n           })(<textarea  ref={input => (this.getDescription = input)}\r\n           autosize={{ minRows: 4, maxRows: 8 }} required/>)}\r\n          </Form.Item>\r\n          \r\n          <Form.Item wrapperCol={{span: 8, offset: 5}}>\r\n           <Button type=\"primary\" htmlType=\"submit\">\r\n              Create\r\n            </Button>\r\n          </Form.Item>\r\n\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default connect() (Form.create()(PostForm));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\n\r\nclass Post extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 >{this.props.post.name}</h2>\r\n        <p>{this.props.post.description}</p>\r\n        <div>\r\n          <Button type=\"primary\"  onClick={()=> this.props.dispatch({type: 'EDIT_POST', id:this.props.post.id})}>\r\n            Edit\r\n          </Button>\r\n          <Button type=\"danger\" onClick={() => this.props.dispatch({ type: \"DELETE_POST\", id: this.props.post.id })}>\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(Post);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Form,  Button, Typography } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\n\r\nclass EditComponent extends Component {\r\n    handleEdit = (e) => {\r\n        e.preventDefault();\r\n        const newName = this.getName.value;\r\n        const newDescription = this.getDescription.value;\r\n        const data = {\r\n            newName,\r\n            newDescription\r\n        }\r\n        this.props.dispatch({type: 'UPDATE', id:this.props.post.id, data:data})\r\n    }\r\n\r\n \r\n    render() {\r\n        const { Title } = Typography;\r\n        return (\r\n            <div>\r\n            <Title level={2}>You are editing</Title>\r\n                <Form  onSubmit={this.handleEdit} className=\"login-form\">\r\n                    <Form.Item label = \"Name\">\r\n                        <input ref={(input)=> this.getName=input} defaultValue={this.props.post.name} />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Description\">\r\n                        <textarea ref={(input) => this.getDescription = input} defaultValue={this.props.post.description} />\r\n                    </Form.Item>\r\n                    <Form.Item wrapperCol={{span:12 , offset: 5}}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Update\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n           \r\n          \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect() (EditComponent);","import React, { Component } from \"react\";\r\nimport { connect} from 'react-redux';\r\nimport Post from '../Post';\r\nimport EditComponent from './EditComponent';\r\nimport { Typography } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\n\r\n\r\n\r\n\r\nclass AllPost extends Component {\r\n  render() {\r\n    const { Title } = Typography;\r\n    return (\r\n      <div>\r\n      <Title level={2}>All elements </Title>\r\n        {this.props.posts.map((post) => (\r\n          <div key={post.id}>\r\n            {post.editing ? <EditComponent post={post} key={post.id}/> : \r\n           <Post key={post.id} post={post} />}\r\n      </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        posts: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AllPost);\r\n","import React, { Component } from 'react';\nimport PostForm from './components/PostForm';\nimport AllPost from './components/AllPost';\nimport { Row, Col, Typography, Icon } from 'antd';\nimport \"antd/dist/antd.css\";\n\nclass App extends Component {\n  \n  render(){\n    const { Title } = Typography;\n  return (\n    <div >\n      <div className=\"navbar\">\n        <Title level={2} ><Icon type=\"smile\" theme=\"outlined\" /> Welcome!</Title> \n      </div>\n      <Row type=\"flex\" justify=\"space-around\" >\n        <Col span={6}>\n        <AllPost />\n        </Col>\n        <Col span={10}>\n        <PostForm />\n        </Col>\n      </Row>     \n    </div>\n   );\n  }\n}\n\nexport default App;\n","const postReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_POST\":\r\n      return state.concat([action.data]);\r\n    case \"DELETE_POST\":\r\n      return state.filter(post => post.id !== action.id);\r\n    case \"EDIT_POST\":\r\n      return state.map(post =>\r\n        post.id === action.id ? { ...post, editing: !post.editing } : post\r\n      );\r\n    case \"UPDATE\":\r\n      return state.map(post => {\r\n        if (post.id === action.id) {\r\n          return {\r\n            ...post,\r\n            name: action.data.newName,\r\n            description: action.data.newDescription,\r\n            editing: !post.editing\r\n          };\r\n        } else return post;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport postReducer from \"./reducers/postReducer\";\n\nconst store = createStore(postReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    , <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n\n/*El componente proveedor utiliza algo llamado REACT CONTEXT que le permite pasar el objeto\nde la tienda a cualquier componente que necesite acceder a él sin necesidad de pasar puntales. */"],"sourceRoot":""}