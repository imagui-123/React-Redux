{"version":3,"sources":["components/PostForm.js","Post.js","components/EditComponent.js","components/AllPost.js","App.js","reducers/postReducer.js","index.js"],"names":["PostForm","handleSubmit","e","preventDefault","name","getName","value","description","getDescription","data","id","Date","editing","props","dispatch","type","onSubmit","this","required","ref","input","placeholder","cols","rows","Component","connect","Post","post","onClick","EditComponent","handleEdit","newName","newDescription","defaultValue","AllPost","posts","map","key","state","App","className","justify","span","postReducer","action","concat","filter","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6a1114f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {connect} from 'react-redux';\r\n\r\nclass PostForm extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const name = this.getName.value;\r\n    const description = this.getDescription.value;\r\n    const data = {\r\n      id: new Date(),\r\n      name,\r\n      description,\r\n      editing: false\r\n    };\r\n    // console.log(data)\r\n    this.props.dispatch({\r\n        type:'ADD_POST',\r\n        data\r\n    })\r\n    this.getName.value= '';\r\n    this.getDescription.value = '';\r\n  };\r\n  render() {\r\n   \r\n    return (\r\n      <div >\r\n        <h1 >You are adding a new element</h1>\r\n        <form  onSubmit={this.handleSubmit}>\r\n          Name:\r\n         <br /><input\r\n            required\r\n            type=\"text\"\r\n            ref={input => (this.getName = input)}\r\n            placeholder=\"Enter Name\"\r\n          />{\" \"}\r\n          <br />\r\n          <br />\r\n          Description:\r\n         <br />\r\n          <textarea\r\n            required\r\n            cols=\"28\"\r\n            rows=\"5\"\r\n            ref={input => (this.getDescription = input)}\r\n            placeholder=\"Enter a description\"\r\n          />{\" \"}\r\n          <br />\r\n          <button>Create</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(PostForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Post extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 >{this.props.post.name}</h2>\r\n        <p>{this.props.post.description}</p>\r\n        <div>\r\n          <button  onClick={()=> this.props.dispatch({type: 'EDIT_POST', id:this.props.post.id})}>Edit</button>\r\n          <button onClick={() => this.props.dispatch({ type: \"DELETE_POST\", id: this.props.post.id })\r\n          }\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(Post);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass EditComponent extends Component {\r\n    handleEdit = (e) => {\r\n        e.preventDefault();\r\n        const newName = this.getName.value;\r\n        const newDescription = this.getDescription.value;\r\n        const data = {\r\n            newName,\r\n            newDescription\r\n        }\r\n        this.props.dispatch({type: 'UPDATE', id:this.props.post.id, data:data})\r\n    }\r\n\r\n \r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleEdit}>\r\n                    <h1>You are editing</h1><br/>\r\n                    <input required type=\"text\" ref={(input)=> this.getName=input} defaultValue={this.props.post.name} placeholder=\"Enter Name\"/> <br/>\r\n                    <textarea required cols=\"28\" rows=\"5\" ref={(input) => this.getDescription = input} defaultValue={this.props.post.description} placeholder=\"Enter Description\" ></textarea> <br/>\r\n                    <button>Update</button>\r\n                </form>\r\n            </div>\r\n           \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect() (EditComponent);","import React, { Component } from \"react\";\r\nimport { connect} from 'react-redux';\r\nimport Post from '../Post';\r\nimport EditComponent from './EditComponent';\r\n\r\n\r\nclass AllPost extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>All Elements</h1>\r\n        {this.props.posts.map((post) => (\r\n          <div key={post.id}>\r\n            {post.editing ? <EditComponent post={post} key={post.id}/> : \r\n         <Post key={post.id} post={post} />}\r\n      </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        posts: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AllPost);\r\n","import React, { Component } from 'react';\nimport PostForm from './components/PostForm';\nimport AllPost from './components/AllPost';\nimport { Row, Col } from 'antd';\nimport \"antd/dist/antd.css\";\n\nclass App extends Component {\n  render(){\n  return (\n    <div >\n      <div className=\"navbar\">\n        <h2 className=\"center\">Welcome!</h2>\n      </div>\n      <Row type=\"flex\" justify=\"space-around\" >\n        <Col span={6}>\n        <AllPost />\n        </Col>\n        <Col span={10}>\n        <PostForm />\n        </Col>\n      </Row>     \n    </div>\n   );\n  }\n}\n\nexport default App;\n","const postReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_POST\":\r\n      return state.concat([action.data]);\r\n    case \"DELETE_POST\":\r\n      return state.filter(post => post.id !== action.id);\r\n    case \"EDIT_POST\":\r\n      return state.map(post =>\r\n        post.id === action.id ? { ...post, editing: !post.editing } : post\r\n      );\r\n    case \"UPDATE\":\r\n      return state.map(post => {\r\n        if (post.id === action.id) {\r\n          return {\r\n            ...post,\r\n            name: action.data.newName,\r\n            description: action.data.newDescription,\r\n            editing: !post.editing\r\n          };\r\n        } else return post;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport postReducer from \"./reducers/postReducer\";\n\nconst store = createStore(postReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    , <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n\n/*El componente proveedor utiliza algo llamado REACT CONTEXT que le permite pasar el objeto\nde la tienda a cualquier componente que necesite acceder a Ã©l sin necesidad de pasar puntales. */"],"sourceRoot":""}